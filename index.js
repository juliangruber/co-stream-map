
/**
 * Map streams generated by `fn` over `read`.
 * 
 * @param {GeneratorFunction} read
 * @param {GeneratorFunction} fn
 * @return {GeneratorFunction}
 */

module.exports = function map(read, fn){
  var sub;

  return function*(end){
    if (end) {
      yield read(true);
      if (sub) yield sub(true);
      return;
    }
  
    if (sub) {
      var data = yield sub();
      if (data) return data;
      sub = null;
    }

    var arg = yield read();
    if (!arg) return;

    var data;
    while (!data) {
      sub = isGeneratorFunction(fn)
        ? yield fn(arg)
        : fn(arg);
      data = yield sub();
      if (data) return data;
    }
  };
};

/**
 * Check if `obj` is a generator function.
 *
 * @param {Mixed} obj
 * @return {Boolean}
 * @api private
 */

function isGeneratorFunction(obj) {
  return obj && obj.constructor && 'GeneratorFunction' == obj.constructor.name;
}

